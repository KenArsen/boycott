from django.db.models.signals import m2m_changed, post_migrate
from django.dispatch import receiver

from apps.account.choices import RoleChoices
from apps.account.models import Role


@receiver(m2m_changed, sender=Role.permissions.through)
def update_user_permissions(sender, instance, action, **kwargs):
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–∞–≤–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–∞–Ω–Ω–æ–π —Ä–æ–ª—å—é,
    –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è permissions –≤ Role.
    """
    if action in [
        "post_add",
        "post_remove",
        "post_clear",
    ]:  # –ö–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è/—É–¥–∞–ª—è—é—Ç—Å—è –ø—Ä–∞–≤–∞
        print(f"üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é: {instance.name}")

        for user in instance.users.all():
            user.user_permissions.clear()  # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–∞–≤
            user.user_permissions.add(*instance.permissions.all())  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–∞–≤
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.email}")


@receiver(post_migrate)
def create_roles(sender, **kwargs):
    if sender.name == "apps.account":
        roles = [RoleChoices.ADMIN, RoleChoices.MODERATOR, RoleChoices.USER]

        existing_roles = set(Role.objects.values_list("name", flat=True))  # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–æ–ª–∏

        for role in roles:
            if role not in existing_roles:
                Role.objects.create(name=role)
                print(f"‚úÖ Created role: {role}")
            else:
                print(f"‚ö†Ô∏è Role already exists: {role}")
